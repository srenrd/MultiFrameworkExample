namespace Handlers
{
	using System;
	using System.Web;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using GolfBox.OnlinePayment;

	public class GetOrderList : IHttpHandler
	{
		public bool IsReusable
		{
			get { return true; }
		}

		public void ProcessRequest(HttpContext context)
		{
			HttpRequest req = context.Request;
			HttpResponse res = context.Response;
            
            string idlist = req["paymentIdList"];

            List<int> paymentIdList = new List<int>();

            foreach (string s in idlist.Split(','))
            {
                int id;
                if (int.TryParse(s, out id))
                    paymentIdList.Add(id);
            }

            GolfBox.Framework.OnlinePayment.Payment[] payments = GolfBox.Framework.OnlinePayment.Payment.List(paymentIdList);

            Helper.WriteTxt(res, ToJson(payments));
		}

        public static string ToJson(object obj)
        {
            return ToJson(obj, false);
        }

        public static string ToJson(object obj, bool indented)
        {
            JsonSerializerSettings setting = new JsonSerializerSettings();
            IsoDateTimeConverter isoDate = new IsoDateTimeConverter()
            {
                DateTimeFormat = "yyyyMMdd\"T\"HHmmss"
            };
            setting.Converters.Add(isoDate);
            return JsonConvert.SerializeObject(obj, indented ? Newtonsoft.Json.Formatting.Indented : Newtonsoft.Json.Formatting.None, setting);
        }
	}
}